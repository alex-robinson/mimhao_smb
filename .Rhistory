grid.table(table4)
dev.off()
### A COMPACT TABLE OF CURRENT PRECIPITATION ###
table5 = def[nms2]
table5[3]=def[17]
table5[4]=def[20]
table5[5]=def[28]
table5[6]=def[31]
names(table5)[1]  = "Ice shelves"
names(table5)[2]  = "Area [km2]"
names(table5)[3]  = "SMB (2000-2010) [Gt/yr]"
names(table5)[4]  = "SMB (2000-2010) [mm/yr]"
names(table5)[5]  = "Precip. offset (2000-2010) [mm/yr]"
names(table5)[6]  = "Precip. offset (2000-2010) [%]"
#Save table5 to a pdf file
pdf(file.path(outfldr,"table5.pdf"),height=10, width=20)
grid.table(table5)
dev.off()
### A COMPACT TABLE OF FUTURE PRECIPITATION ###
table6 = def[nms2]
table6[c(3,4)]=def[c(22,23)]
table6[5]=def[30]
table6[6]=def[32]
names(table6)[1]  = "Ice shelves"
names(table6)[2]  = "Area [km2]"
names(table6)[3]  = "SMB (2071-2100) [Gt/yr]"
names(table6)[4]  = "SMB (2071-2100) [mm/yr]"
names(table6)[5]  = "Precip. offset (2071-2100) [mm/yr]"
names(table6)[6]  = "Precip. offset (2071-2100) [%]"
#Save table6 to a pdf file
pdf(file.path(outfldr,"table6.pdf"),height=10, width=20)
grid.table(table6)
dev.off()
#######LAST CALCULATIONS#######
# We have to evaluate this situation
# H + (dH/dt)dt >= zb?
# and extract the value of dt when in the limit of this equation (= zb)
#We'll use this data:
#TOPO_BEDMAP2$zb
#TOPO_BEDMAP2$H
#table3$`dH/dt (2000-2010) [m/yr]`
#table3$`dH/dt (2071-2100) [m/yr]`
#H and zb are defined for each point but dH/dt is calculated for each region
# Dt = 1; #period of time (initially one year, that is the changes in 2071)
# gice = TOPO_BEDMAP2$H        #Grounded ice mask
# gice[] = NA                  #Grounded ice mask
# newH = TOPO_BEDMAP2$H        #New thickness
# newH[] = NA                  #New thickness
# Dep = - TOPO_BEDMAP2$zb      # Depth with positive sign
#
# count = NA
#
#   for(i in 1:n_reg)
#   {
#     reg = which(mask_super==i)
#     for (Dt in 0:100)
#     {
#       newH[reg] = TOPO_BEDMAP2$H[reg]+Dt*table3$`dH/dt (2071-2100) [m/yr]`[i]
#       abovesl = which(Dep[reg]<0) #Which values are above sea level (negative depths)
#       Dep[reg][abovesl] = NA #In our study we eliminate points above sea level
#       gice_points = which(newH[reg]>=Dep[reg]) #Which points are grounded
#       gice[which(is.na(gice[gice_points]))] = Dt #How many years (since january 1st 2071) are necessary to achieve stability
#       #gice[which(gice[gice_points])==100] = ">100"
#       count[Dt] = length(which(gice[reg] > 0)) #How many points are grounded in year Dt
#       #Now we could plot gice for each region and year to see how it changes
#     }
#   }
Dep = - TOPO_BEDMAP2$zb      # Depth with positive sign
reg = which(mask_super==i)
reg
View(reg)
reg = which(mask_super==2)
View(reg)
reg
Dep[reg]-TOPO_BEDMAP2$H[reg]
View(Dep[reg]-TOPO_BEDMAP2$H[reg])
TOPO_BEDMAP2$H[reg][abovesl]
abovesl = which(Dep[reg]<0)
abovesl
which(Dep[which(mask_super==1)]<0)
which(Dep[which(mask_super==2)]<0)
which(Dep[which(mask_super==3)]<0)
which(Dep[which(mask_super==4)]<0)
which(Dep[which(mask_super==5)]<0)
which(Dep[which(mask_super==6)]<0)
which(Dep[which(mask_super==7)]<0)
which(Dep[which(mask_super==8)]<0)
which(Dep[which(mask_super==9)]<0)
which(Dep[which(mask_super==10)]<0)
which(Dep[which(mask_super==11)]<0)
which(Dep[which(mask_super==12)]<0)
which(Dep[which(mask_super==13)]<0)
which(Dep[which(mask_super==14)]<0)
which(Dep[which(mask_super==15)]<0)
which(Dep[which(mask_super==16)]<0)
which(Dep[which(mask_super==17)]<0)
which(Dep[which(mask_super==18)]<0)
which(Dep[which(mask_super==19)]<0)
which(Dep[which(mask_super==20)]<0)
which(Dep[which(mask_super==21)]<0)
which(Dep[which(mask_super==22)]<0)
which(Dep[which(mask_super==23)]<0)
which(Dep[which(mask_super==24)]<0)
years
Yrs
max(c(1,23,34,234,1,4,23235,235,-124,12141-24,2141))
max(c(1,23,34,234,1,4,23235,235,-124,12141-24,2141,NA,545,NA))
max(c(1,23,34,234,1,4,23235,235,-124,12141-24,2141,NA,545,NA), na.rm=TRUE)
Dep = - TOPO_BEDMAP2$zb      # Depth with positive sign
for (i in 1::nreg)
{
reg = which(mask_super==i)
abovesl = which(Dep[reg]<0) #Which values are above sea level (negative depths)
Dep[reg][abovesl] = NA #In our study we eliminate points above sea level
TOPO_BEDMAP2$H[reg][abovesl] = NA #In our study we eliminate points above sea level
Dt[i]=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i] #Time to achieve stability (yr)
Yrs[i] = max(Dt[i], na.rm=TRUE)
}
Yrs #Show the years on screen
Dt = TOPO_BEDMAP2$zb #Time to achieve stability (yr)
#I do this only to get the correct dimensions of this object
Dt[]=NA
Dt
dim(NA)
length(Dt)
dim(Dt)
dim(Dep)
length(Dt)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
rm(Dt)
Dep = - TOPO_BEDMAP2$zb      # Depth with positive sign
# Dt = TOPO_BEDMAP2$zb #Time to achieve stability (yr)
# #I do this only to get the correct dimensions of this object
# Dt[]=NA
for (i in 1:n_reg)
{
reg = which(mask_super==i)
abovesl = which(Dep[reg]<0) #Which values are above sea level (negative depths)
Dep[reg][abovesl] = NA #In our study we eliminate points above sea level
TOPO_BEDMAP2$H[reg][abovesl] = NA #In our study we eliminate points above sea level
Dt[i]=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i] #Time to achieve stability (yr)
Yrs[i] = max(Dt[i], na.rm=TRUE)
}
Yrs #Show the years on screen
Dt[]=NA
Dt
Dt=array(dim=21)
Dt
for (i in 1:n_reg)
{
reg = which(mask_super==i)
abovesl = which(Dep[reg]<0) #Which values are above sea level (negative depths)
Dep[reg][abovesl] = NA #In our study we eliminate points above sea level
TOPO_BEDMAP2$H[reg][abovesl] = NA #In our study we eliminate points above sea level
Dt[i]=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i] #Time to achieve stability (yr)
Yrs[i] = max(Dt[i], na.rm=TRUE)
}
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[3]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[5]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[7]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[9]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[13]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[15]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[16]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[17]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[18]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[19]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[22]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[21]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[20]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[12]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[10]
(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[9]
Dep[reg]
Dt[i]=array(dim=length(TOPO_BEDMAP2$H[reg]))
rm(dt)
rm(Dt)
Dt[i]=array(dim=length(TOPO_BEDMAP2$H[reg]))
Dt=array(dim=length(TOPO_BEDMAP2$H[reg]))
rm(Dt)
Dt=array(dim=length(TOPO_BEDMAP2$H[reg]))
Dt
Dt=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i]
Dt
rm(Dt)
i
Dt[i]=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i]
Dt=array(dim=c(length(TOPO_BEDMAP2$H[reg]),n_reg)
)
Dt
Dt[i]=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i]
Dt=array(dim=c(length(TOPO_BEDMAP2$H[reg])))
Dt=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i] #Time to achieve stability (yr)
rm(Dt)
Dt=array(dim=c(length(TOPO_BEDMAP2$H[reg])))
Dt=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i] #Time to achieve stability (yr)
Dt
Yrs = array(dim=n_reg)
Yrs
Yrs[i] = max(Dt, na.rm=TRUE)
Yrs
last
source('~/TFM/mimhao_smb/calculations.r')
which(Dt==Yrs[i])
which(Dt==Yrs[3])
Dt
rm(Dt)
rm(Yrs)
rm(last)
rm(Dep)
Dep  = - TOPO_BEDMAP2$zb
i
i=2
reg = which(mask_super==i)
Dt=array(dim=c(length(TOPO_BEDMAP2$H[reg])))
Dt
Dt=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i]
Dt
max(Dt, na.rm=TRUE)
which(Dt==Yrs[i])
which(max(Dt,na.rm=TRUE)==Dt)
mask_super[95]
mask_super
Yrs
Yrs[i] = max(Dt, na.rm=TRUE)
rm(Yrs)
Yrs  = array(dim=n_reg)
YRs
Yrs
Yrs[i] = max(Dt, na.rm=TRUE)
YRs
Yrs
source('~/TFM/mimhao_smb/calculations.r')
i
Yrs
table3$`dH/dt (2071-2100) [m/yr]`
table3$`dH/dt (2071-2100) [m/yr]`[20]
Dep[reg]-TOPO_BEDMAP2$H[reg]
Dep[which(mask_super==20)]-TOPO_BEDMAP2$H[which(mask_super==20)]
Dep[which(mask_super==20)]
TOPO_BEDMAP2[which(mask_super==20)]
TOPO_BEDMAP2$H[which(mask_super==20)]
TOPO_BEDMAP2$H[which(mask_super==3)]
which(mask_super==3)
which(mask_super==20)
TOPO_BEDMAP2$H[12990]
TOPO_BEDMAP2$H[13130]
which(mask_super==21)
which(mask_super==22)
which(mask_super==23)
TOPO_BEDMAP2$H[13130]
TOPO_BEDMAP2$H[12124]
TOPO_BEDMAP2$H[121212]
TOPO_BEDMAP2$H[1212]
TOPO_BEDMAP2$H[12]
TOPO_BEDMAP2$H[23]
TOPO_BEDMAP2$H[2300]
rm(TOPO_BEDMAP2)
source('load_data.r')
Dep  = - TOPO_BEDMAP2$zb     # Depth with positive sign
Yrs  = array(dim=n_reg)      # Number of years to achieve stability in all points
last = array(dim=n_reg)      # Last point to ground
for (i in 1:n_reg)
{
reg = which(mask_super==i)
Dt=array(dim=c(length(TOPO_BEDMAP2$H[reg])))
Dt=(Dep[reg]-TOPO_BEDMAP2$H[reg])/table3$`dH/dt (2071-2100) [m/yr]`[i] #Time to achieve stability (yr)
Yrs[i] = max(Dt, na.rm=TRUE)
}
Yrs
which(mask_super==20)
TOPO_BEDMAP2[which(mask_super==20)]
TOPO_BEDMAP2$H[which(mask_super==20)]
Dep
H
TOPO_BEDMAP2$H[reg]
TOPO_BEDMAP2$H
Dt
source('~/TFM/mimhao_smb/calculations.r')
Yrs
table7 = def[nms2]
table7
table7[3]=Yrs
table7+
)
table7
table7[2]
table7[2][0]="Time to achieve stability [yr]"
table7[2]=Yrs
table7[2]=Yrs
table7[2]=0,Yrs
table7[2]=0 Yrs
table7[2]=c(1,Yrs)
table7
names(table7)
names(table7[2])
names(table2)="Time to achieve stability [yr]"
table7[2]=Yrs
names(table7)
names(table7[2])=3
names(table7[2])
table7
names(table7[2])="Hola mundo"
names(table7[2])
names(table7[2])<-"Hola mundo"
names(table7[2])
names(table7[2])<-"Hola.mundo"
names(table7[2])
rm(table7)
table7=data.frame()
table7
table7[[1]]
table7[1]
table7[1]=Yrs[i]
table7[1]=Yrs
table7
Yrs
rm(table7)
table7=data.frame()
table7[1]=Yrs
rm(table7)
rm(table7)
table7 = def[nms2]
names(table7)[2] ="Time to achieve stability [yr]"
table7[2] = Yrs
table7
rm(table7)
table7 = def[nms2]
table7[2] = Yrs
names(table7)[2] ="Time to achieve stability [yr]"
table7[2]
rm(table7)
table7 = def[nms2]
table7[2][[1:21]] = Yrs
names(table7)[2] ="Time to achieve stability [yr]"
table7
table7[2][[1:21]]
rm(table7)
ls
table7
table7 = def[nms2][0:21]
def[nms2]
def[nms2][1:22]
nms3
nms3 = names(def)[c(1)]
nms3
table7 = def[nms3]
table7
rm(table7[22])
Yrs
Yrs[22]
Yrs[22]=max(Yrs)
Yrs
rm(table7)
table7
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7
table7[2]
table7[[2]]
table7[1]
table7 = c(def[nms3],2)
table7
rm(table7)
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7
table$names
table$Names
table$Name
table$`Name`
table7$`Name`
table7$Name
table7$ANEFN=Yrs
table7
rm(table7)
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$Stability.time[yr]
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"Stability.time[yr]"
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"Stability.time[yr]"=Yrs
table7
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"Stability.time[yr]"=Yrs
pdf(file.path(outfldr,"table6.pdf"),height=10, width=10)
grid.table(table6)
dev.off()
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"Stability.time[yr]"=Yrs
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
map_Yr
kk
map_Yr[kk]
Yrs+2071
int(Yrs+2071)
as.integer(Yrs+2071)
rm(table7)
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$Stability.time.yr=Yrs
table7$Stability.year=as.integer(Yrs+2071)
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
table7
as.integer(Yrs+2071, is.na=FALSE)
as.integer(Yrs+2071, is.na=TRUE)
rm(table6)
table6 = def[nms2]
table6[c(3,4)]=def[c(22,23)]
table6[5]=def[30]
table6[6]=def[32]
names(table6)[1]  = "Ice shelves"
names(table6)[2]  = "Area [km2]"
names(table6)[3]  = "SMB (2071-2100) [Gt/yr]"
names(table6)[4]  = "SMB (2071-2100) [mm/yr]"
names(table6)[5]  = "Precip. offset (2071-2100) [mm/yr]"
names(table6)[6]  = "Precip. offset (2071-2100) [%]"
#Save table6 to a pdf file
pdf(file.path(outfldr,"table6.pdf"),height=10, width=20)
grid.table(table6)
dev.off()
brks   = seq(0,max(15400),by=2)
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2071) [Yr]")
graphics.off()
source("functions_plotting.r")
brks   = seq(0,max(15400),by=2)
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2071) [Yr]")
graphics.off()
brks   = seq(0,15400,by=2)
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2071) [Yr]")
graphics.off()
brks
col
map_Yr(is.na=FALSE)
map_Yr
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
}
map_YrN = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_YrN[kk] = table7$Stability.year[q]
}
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$Stability.time.yr=Yrs
table7$Stability.year=as.integer(Yrs+2071)
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
brks
col
brks   = seq(0,15400,by=2) #NUMBER OF YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2071) [Yr]")
graphics.off()
brks   = seq(0,17500,by=2) #YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_yearsN",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_YrN,mask_ice,mask_super,breaks=brks,col=col,title="Stability year")
graphics.off()
brks   = seq(-110,190,by=10)
col    = colorRampPalette(palette2,bias=1.5)(length(brks)-1)
# brks1  = seq(-20,20,length.out=11)
# col1   = colorRampPalette(palette2,bias=1)(length(brks1)-1)
myfigure(outfldr,"map_glgerovirwh",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_gl,mask_ice,mask_super,breaks=brks,col=col,title="GL [Gt/yr]")
graphics.off()
palette1 = c("darkblue","blue4","blue2","khaki1","red","red4")
palette2 = c("darkblue","blue4","blue2","white","orange","red","red4")
palette3 = c("darkblue","blue4","blue2","cyan","white") #to plot precipitation (always negative)
palette4 = c("white", "khaki1","red","red4") #to plot projected dH/dt and oceanic temperature anomalies (always positives)
palette5 = c("red4", "red", "khaki1", "white") #to plot unstable areas
palette6 = c("darkblue","blue2","white","red","red4") #to plot unstable areas
brks   = seq(0,15400,by=2) #NUMBER OF YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2071) [Yr]")
graphics.off()
brks   = seq(0,17500,by=2) #YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_yearsN",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_YrN,mask_ice,mask_super,breaks=brks,col=col,title="Stability year")
graphics.off()
brks   = seq(2071,17500,by=2) #YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_yearsN",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_YrN,mask_ice,mask_super,breaks=brks,col=col,title="Stability year")
graphics.off()
