image.plot(region_mask[[3]]$land)
source('~/TFM/mimhao_smb/calculations.r')
image.plot(if_total_flux[,,3])
image.plot(if_total_flux[,,4])
image.plot(if_total_flux[,,,])
image.plot(sum(if_total_flux[,,i]))
image.plot(apply(if_total_flux[,,i], sum))
image.plot(apply(if_total_flux[,,i], FUN=sum))
image.plot(apply(if_total_flux[,,i], MARGIN = C(1,2), FUN=sum))
image.plot(apply(if_total_flux[,,i], MARGIN = c(1,2), FUN=sum))
image.plot(apply(if_total_flux[,,i], MARGIN = c(1,2), FUN=sum(i)))
image.plot((regions_uv(mask_ice_land))$u*region_mask[[i]]$ice)
plot.image(region_any())
image.plot(region_mask_all$ice)
image.plot(mask_ice_land & region_mask[[i]]$ice)
mask_ice_ice
image.plot(mask_ice_ice)
image.plot(mask_ice_all)
image.plot(mask_ice_ice)
image.plot(mask_ice_land)
image.plot(mask_ice_land)
image.plot(icecontour)
image.plot(icefront)
image.plot(icecontour)
source('~/TFM/mimhao_smb/calculations.r')
image.plot(icecontour[[4]])
image.plot(icecontour[4])
image.plot(icecontour*region_mask[[3]])
image.plot(icecontour*region_mask[[3]]$ice)
image.plot(region_mask[[3]]$ice)
image.plot(icecontour*region_mask[[3]]$ice)
source('~/TFM/mimhao_smb/calculations.r')
image.plot(icecontour*region_mask[[3]]$ice)
image.plot(icecontour*region_mask[[5]]$ice)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
image.plot(icecontour*region_mask[[1]]$ice)
image.plot(icecontour*region_mask[[2]]$ice)
image.plot(icecontour*region_mask[[3]]$ice)
{
image.plot(icecontour*region_mask[[i]]$ice, add=TRUE)
}
image.plot(icecontour*region_mask[[27]]$ice)
image.plot(icecontour*region_mask[[26]]$ice)
source('~/TFM/mimhao_smb/calculations.r')
for (i in 1:length(index))
{
image.plot(icecontour*region_mask[[i]]$ice, add=TRUE)
}
i=0
for (i in 1:length(index))
{
image.plot(icecontour*region_mask[[i]]$ice, add=TRUE)
}
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
image.plot(icecontour*region_mask[[i]]$ice)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
image.plot(icecontour*region_mask[[i]]$ice)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
image.plot(icecontour*region_mask[[i]]$ice)
image.plot(icecontour*region_mask[[1]]$ice)
image.plot(icecontour*region_mask[[2]]$ice)
image.plot(icecontour*region_mask[[3]]$ice)
image.plot(icecontour*region_mask[[4]]$ice)
image.plot(icecontour*region_mask[[5]]$ice)
image.plot(icecontour*region_mask[[6]]$ice)
image.plot(icecontour*region_mask[[7]]$ice)
image.plot(icecontour*region_mask[[8]]$ice)
image.plot(icecontour*region_mask[[9]]$ice)
image.plot(icecontour*region_mask[[10]]$ice)
image.plot(icecontour*region_mask[[11]]$ice)
image.plot(icecontour*region_mask[[12]]$ice)
image.plot(icecontour*region_mask[[13]]$ice)
image.plot(icecontour*region_mask[[14]]$ice)
image.plot(icecontour*region_mask[[15]]$ice)
image.plot(icecontour*region_mask[[16]]$ice)
image.plot(icecontour*region_mask[[16]]$ice)
image.plot(icecontour*region_mask[[17]]$ice)
image.plot(icecontour*region_mask[[18]]$ice)
image.plot(icecontour*region_mask[[19]]$ice)
image.plot(icecontour*region_mask[[120]]$ice)
image.plot(icecontour*region_mask[[20]]$ice)
image.plot(icecontour*region_mask[[21]]$ice)
image.plot(icecontour*region_mask[[22]]$ice)
image.plot(icecontour*region_mask[[23]]$ice)
image.plot(icecontour*region_mask[[24]]$ice)
image.plot(icecontour*region_mask[[25]]$ice)
image.plot(icecontour*region_mask[[26]]$ice)
image.plot(icecontour*region_mask[[27]]$ice)
image.plot(region_mask[[27]]$ice)
image.plot(icecontour*region_mask[[27]]$ice)
image.plot(icecontour*region_mask[[4]]$ice)
image.plot(region_mask[[4]]$ice)
image.plot(icecontour)
image.plot(landcontour)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
region_mask[[i]]$land
image.plot(region_mask[[3]]$land)
image.plot(region_mask[[3]]$land*landcontour)
image.plot(landcontour)
image.plot(landcontour*region_mask[[3]])
image.plot(landcontour*region_mask[[3]]$land)
image.plot(region_mask[[3]]$land)
source('~/TFM/mimhao_smb/calculations.r')
image.plot(landcontour)
image.plot(icecontour)
image.plot(landcontour*region_mask[[3]]$land)
image.plot(region_mask[[3]]$land)
image.plot(landcontour*region_mask[[3]]$land)
image.plot(landcontour)
image.plot(region_mask[[3]])
image.plot(region_mask[[3]]$land)
image.plot(landcontour)
image.plot(landcontour*region_mask[[3]]$land)
image.plot(landcontour)
image.plot(region_mask[[3]]$land)
image.plot(landcontour*region_mask[[3]]$land)
image.plot(region_mask[[17]]$land)
image.plot(landcontour*region_mask[[17]]$land)
image.plot(region_mask[[17]]$land)
image.plot(region_mask[[17]]$land)
image.plot(groundline$u)
image.plot(groundline$v)
image.plot(groundline$uv)
image.plot(groundline$u)
image.plot(VEL_R11)
image.plot(VEL_R11$u)
image.plot(VEL_R11$u*landcontour)
image.plot(VEL_R11$u)
image.plot(VEL_R11$u, add=TRUE)
image.plot(lon2D, lat2D, add=TRUE)
image.plot(Xc, Yc, add=TRUE)
image.plot(VEL_R11$lon2D, VEL_R11$lat2D, add=TRUE)
image.plot(groundline$u)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
image.plot(groundline$u)
image.plot(mask_)
image.plot(mask_u)
image.plot(mask_v)
image.plot(mask_u)
image.plot(mask_u)
image.plot(mask_v)
image.plot(groundline$u)
image.plot(groundline$v)
flux_gl_v = ((-groundline$v * 40e3 * h + -groundline$v * 40e3 * h) /1e6)
flux_gl_v_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_v_plot)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl*region_mask[[i]]$ice)  #CHANGED
}
df_gl
df_gl_v
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl_v*region_mask[[i]]$ice)  #CHANGED
}
df_gl
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl_v*region_mask[[i]]$ice)  #CHANGED
}
df_gl
flux_gl_v_plot
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl_v*region_mask[[i]]$land)  #CHANGED
}
df_gl
sum(df_gl)
icelon
flux_gl_v = ((groundline$v * 40e3 * h + groundline$v * 40e3 * h) /1e6)
flux_gl_v_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_v_plot)
image.plot(VEL_R11$u)
image.plot(VEL_R11$v)
image.plot(VEL_R11$u)
image.plot(VEL_R11$uv)
image.plot(VEL_R11$u)
image.plot(VEL_R11$v)
flux_gl = ((-groundline$v * 40e3 * h + -groundline$u * 40e3 * h) /1e6)
flux_gl_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_plot)
#flux_gl = flux_gl_u + flux_gl_v
#df_gl = data.frame(row.names=index)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl*region_mask[[i]]$land)  #CHANGED
}                                                                    #CHANGED
df_fl
df_gl
sum(df_gl)
source("function_regions_backup.r")
regions_uv <- function(mask,vi=1,vo=0) #the value of the sea is 0 in mask_ice_land and mask_ice_ice
{
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vo else vi) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
groundline = regions_uv(mask_ice_land)
flux_gl = ((-groundline$v * 40e3 * h + -groundline$u * 40e3 * h) /1e6)
flux_gl_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_plot)
regions_uv <- function(mask,vi=1,vo=0) #the value of the sea is 0 in mask_ice_land and mask_ice_ice
{
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vi else v0) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
groundline = regions_uv(mask_ice_land)
groundline = regions_uv(mask_ice_land)
regions_uv <- function(mask,vi=1,vo=0) #the value of the sea is 0 in mask_ice_land and mask_ice_ice
{
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vi else v0) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
groundline = regions_uv(mask_ice_land)
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vi else vo) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
egions_uv <- function(mask,vi=1,vo=0) #the value of the sea is 0 in mask_ice_land and mask_ice_ice
{
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vi else vo) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
egions_uv <- function(mask,vi=1,vo=0) #the value of the sea is 0 in mask_ice_land and mask_ice_ice
{
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vi else vo) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
## Function to extract the vectors 'u' and 'v' #################################
regions_uv <- function(mask,vi=1,vo=0) #the value of the sea is 0 in mask_ice_land and mask_ice_ice
{
## Return the mask of velocity u and v with the sign of dS
mask_u <- array(0,dim(mask))
mask_v <- array(0,dim(mask))
mask_2 <- apply(mask, c(1, 2), function(x) if (x==vo) vi else vo) #ORIGINAL WAS "vi else vo"
for (i in 2:(dim(mask)[1]-1)){
for (j in 2:(dim(mask)[2]-1)){
#             if (mask[i,j] == vi){
#                 if (mask[i,j+1]==vo | mask[i,j-1]==vo){
#                     mask_u[i,j] <- mask_2
#                 }else if (mask[i+1,j]==vo | mask[i-1,j]==vo){
#                     mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1]
#                 }
#             }
if (mask[i,j] == vi){ #ORIGINAL WAS "vo"
if (mask[i,j+1]==vo){
mask_v[i,j] <- mask_2[i,j+1] - mask_2[i,j] # -1
}else if (mask[i,j-1]==vo){
mask_v[i,j] <- mask_2[i,j] - mask_2[i,j-1] # +1
}else if (mask[i+1,j]==vo){
mask_u[i,j] <- mask_2[i+1,j] - mask_2[i,j] # -1
}else if (mask[i-1,j]==vo){
mask_u[i,j] <- mask_2[i,j] - mask_2[i-1,j] # +1
}
}
}
}
mask_uv <- list(u=mask_u, v=mask_v)
return(mask_uv)
}
groundline = regions_uv(mask_ice_land)
flux_gl = ((-groundline$v * 40e3 * h + -groundline$u * 40e3 * h) /1e6)
flux_gl_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_plot)
#flux_gl = flux_gl_u + flux_gl_v
#df_gl = data.frame(row.names=index)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl*region_mask[[i]]$land)  #CHANGED
}                                                                    #CHANGED
df_gl
sum(df_gl)
#df_gl = data.frame(row.names=index)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl_v*region_mask[[i]]$ice)  #CHANGED
}                                                                    #CHANGED
df_gl
source('~/TFM/mimhao_smb/calculations.r')
df_gl
sum(df_gl)
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
df_gl
sum(df_gl)
image.plot(VEL_R11$u)
image.plot(VEL_R11$v)
image.plot(VEL_R11$uv)
image.plot(grounline$u)
image.plot(groundline$u)
image.plot(groundline$v)
##flux_gl_u = -groundline$u * icelon * VEL_R11$u
flux_gl_u = (-groundline$u * 40e3 * VEL_R11$u * h /1e6) #CHANGED
flux_gl_v = (-groundline$v * 40e3 * VEL_R11$v * h /1e6) #CHANGED
#flux_gl_v = ((-groundline$v * 40e3 * h + -groundline$v * 40e3 * h) /1e6)
flux_gl_v_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
flux_gl_u_plot = apply(flux_gl_u, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_v_plot)
flux_gl = flux_gl_u + flux_gl_v
#df_gl = data.frame(row.names=index)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl_v*region_mask[[i]]$land)  #CHANGED
}       print(flux_gl)
##flux_gl_u = -groundline$u * icelon * VEL_R11$u
flux_gl_u = (-groundline$u * 40e3 * VEL_R11$u * h *0.916/1e9) #CHANGED
flux_gl_v = (-groundline$v * 40e3 * VEL_R11$v * h *0.916/1e9) #CHANGED
#flux_gl_v = ((-groundline$v * 40e3 * h + -groundline$v * 40e3 * h) /1e6)
flux_gl_v_plot = apply(flux_gl_v, c(1,2), function(x) if (x==0) NA else x) #CHANGED
flux_gl_u_plot = apply(flux_gl_u, c(1,2), function(x) if (x==0) NA else x) #CHANGED
image.plot(Xc,Yc, flux_gl_v_plot)
flux_gl = flux_gl_u + flux_gl_v
print(flux_gl)
#df_gl = data.frame(row.names=index)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum(flux_gl_v*region_mask[[i]]$land)  #CHANGED
}
flux_gl
flux_gl_u
source('~/TFM/mimhao_smb/calculations.r')
image.plot(groundline$u)
image.plot(abs(groundline$u))
image.plot(abs(groundline$u)+abs(groundline$v))
image.plot(landcontour+abs(groundline$u)+abs(groundline$v))
image.plot(landcontour-abs(groundline$u)-abs(groundline$v))
sum(landcontour-abs(groundline$u)-abs(groundline$v))
image.plot(abs(groundline$u))
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
df_gl
sum(df_gl)
source('~/TFM/mimhao_smb/calculations.r')
sum(df_gl)
for (i in 1:length(index)){                                          #CHANGED
df_gl[i,"groundline-bm"]    = sum((flux_gl_v+flux_gl_u)*region_mask[[i]]$land)  #CHANGED
}
df_gl
sum(df_gl)
df_gl[1]
df_gl[[i]
df_gl[[1]]
df_gl[[1]]
df_gl
df_gl[1, "groundline-bm"]
flux_gl = sum(flux_gl_u + flux_gl_v)
image.plot(Xc,Yc, flux_gl_v_plot)
image.plot(flux_gl_v_plot)
image.plot(Xc,Yc, flux_gl_v_plot)
