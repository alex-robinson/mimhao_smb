names(table5)[1]  = "Ice shelves"
names(table5)[2]  = "Area [km2]"
names(table5)[3]  = "SMB (2000-2010) [Gt/yr]"
names(table5)[4]  = "SMB (2000-2010) [mm/yr]"
names(table5)[5]  = "Precip. offset (2000-2010) [mm/yr]"
names(table5)[6]  = "Precip. offset (2000-2010) [%]"
#Save table5 to a pdf file
pdf(file.path(outfldr,"table5.pdf"),height=10, width=20)
grid.table(table5)
dev.off()
### A COMPACT TABLE OF FUTURE PRECIPITATION ###
table6 = def[nms2]
table6[c(3,4)]=def[c(22,23)]
table6[5]=def[30]
table6[6]=def[32]
names(table6)[1]  = "Ice shelves"
names(table6)[2]  = "Area [km2]"
names(table6)[3]  = "SMB (2071-2100) [Gt/yr]"
names(table6)[4]  = "SMB (2071-2100) [mm/yr]"
names(table6)[5]  = "Precip. offset (2071-2100) [mm/yr]"
names(table6)[6]  = "Precip. offset (2071-2100) [%]"
#Save table6 to a pdf file
pdf(file.path(outfldr,"table6.pdf"),height=10, width=20)
grid.table(table6)
dev.off()
Dep  = - TOPO_BEDMAP2$zb     # Depth with positive sign
Yrs  = array(dim=n_reg)      # Number of years to achieve stability in all points THIS IS THE RESULT OF THE LOOP
a = array(dim=n_reg)         # "Slope"
dH = array(dim=100000)
reg = which(mask_super==1)
H    = TOPO_BEDMAP2$zb[reg]
Dep  = - TOPO_BEDMAP2$zb     # Depth with positive sign
Yrs  = array(dim=n_reg)      # Number of years to achieve stability in all points THIS IS THE RESULT OF THE LOOP
a = array(dim=n_reg)         # "Slope"
dH = array(dim=100000)
reg = which(mask_super==1)
H    = TOPO_BEDMAP2$zb[reg]
for(i in 1:n_reg)
{
Dt = 2005; #Initial Dt (Year 2005)
reg = which(mask_super==i) #Label of the region
#Dt=array(dim=c(length(TOPO_BEDMAP2$H[reg]))) #Each point will have a time of grounding
abovesl = which(Dep[reg]<0) #Which values are above sea level (negative depths)
Dep[reg][abovesl] = NA #In our study we eliminate points above sea level
TOPO_BEDMAP2$H[reg][abovesl] = NA #In our study we eliminate points above sea level
a[i] = (table3$`dH/dt (2071-2100) [m/yr]`[i] - table3$`dH/dt (2000-2010) [m/yr]`[i])/(2071-2005) #Slope of dH/dt(Dt)
rm(H)
H    = TOPO_BEDMAP2$zb[reg]
H[]  = NA
dH[] = NA
while (is.na(Yrs[i]))
{
dH[Dt-2004] = table3$`dH/dt (2000-2010) [m/yr]`[i] + a[i] * (Dt-2005)
H = (916.8/1000)*(TOPO_BEDMAP2$H[reg]+dH[Dt-2004])
if(H[which.min(H)]>Dep[reg]){ Yrs[i] = Dt } else{ Dt = Dt+1}
}
}
warnings()
H
which.min(H)
H(which.min(H))
H[which.min(H)]
Dep[reg]
which.max(Dep[reg])
Dep[reg][which.max(Dep[reg])]
source('~/TFM/mimhao_smb/calculations.r')
Yrs
Dt
H
Dep
H
i
dH
a
a*2
abovesl
dH
a
a*(2071-2005)
-0.1343+0.1854
a*(2071)
a*2005
(10-5)/(2-1)
table3$`dH/dt (2000-2010) [m/yr]`
(table3$`dH/dt (2000-2010) [m/yr]`-table3$`dH/dt (2071-2100) [m/yr]`)
a
(table3$`dH/dt (2000-2010) [m/yr]`-table3$`dH/dt (2071-2100) [m/yr]`)/(2071-2005)
a
(table3$`dH/dt (2000-2010) [m/yr]`-table3$`dH/dt (2071-2100) [m/yr]`)/(2071-2005)*2005
(table3$`dH/dt (2000-2010) [m/yr]`)
(100-25)/(23-1)
(100-25)/(23-1)*23
(100-25)/(23-1)*23+1
(100-25)/(23-1)*23+25
(100-25)/(23-1)
2071-2005
(100-25)/(23-0)
(table3$`dH/dt (2000-2010) [m/yr]`-table3$`dH/dt (2071-2100) [m/yr]`)
(table3$`dH/dt (2000-2010) [m/yr]`-table3$`dH/dt (2071-2100) [m/yr]`)/66
source('~/TFM/mimhao_smb/calculations.r')
warnings()
source('~/TFM/mimhao_smb/calculations.r')
Yrs
a
dH
Dt
source('~/TFM/mimhao_smb/calculations.r')
Dt
Dh
dH
rm(DEP)
Dep
rm(Dep)
dH
H
Dep
a
reg
rm(a)
rm(Yrs)
rm(dH)
rm(reg)
rm(H)
rm(abovesl)
rm(Dt)
rm(Yrs)
Dep  = - TOPO_BEDMAP2$zb     # Depth with positive sign
Yrs  = array(dim=n_reg)      # Number of years (since 2000) to achieve stability in all points THIS IS THE RESULT OF THE LOOP
a = array(dim=n_reg)         # "Slope"
dH = array(dim=1000000)
reg = which(mask_super==1)
H    = TOPO_BEDMAP2$zb[reg]
for(i in 2:n_reg)
{
Dt = 0; #Years since 2005 (Year zero corresponds with 2005)
reg = which(mask_super==i) #Label of the region
abovesl = which(Dep[reg]<0) #Which values are above sea level (negative depths)
Dep[reg][abovesl] = NA #In our study we eliminate points above sea level
TOPO_BEDMAP2$H[reg][abovesl] = NA #In our study we eliminate points above sea level
a[i] = (table3$`dH/dt (2071-2100) [m/yr]`[i] - table3$`dH/dt (2000-2010) [m/yr]`[i])/(2071-2005) #Slope of dH/dt(Dt)
rm(H)
H    = TOPO_BEDMAP2$zb[reg]
H[]  = NA
dH[] = NA
while (is.na(Yrs[i]))
{
dH[Dt+1] = table3$`dH/dt (2000-2010) [m/yr]`[i] + a[i] * Dt
H = (916.8/1000)*(TOPO_BEDMAP2$H[reg]+dH[Dt+1])
if(H[which.min(H)]>Dep[reg][which.max(Dep[reg])]){ Yrs[i] = Dt-5 } else{ Dt = Dt+1}
}
}
YRs
Yrs
Dt
Dep[reg]
H[reg]
H
Dep[reg]
H
Dep[reg]
H>=Dep[reg]
a
source('~/TFM/mimhao_smb/calculations.r')
(80-9)/(3-1.5)
(80-9)/(3-0)
(80-9)/(3-0)*3
(80-9)/(3-0)*3+9
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
Yrs
H
Dep
H
TOPO_BEDMAP2$H[reg]
dH[Dt+1]
dH[1]
dH[Dt]
a
Yrs
source('~/TFM/mimhao_smb/calculations.r')
Yrs
Yrs[21]
Yrs[20]
Yrs[19]
H
Dep
Dep[reg]
H
TOPO_BEDMAP2$H[reg]
reg
rm(TOPO_BEDMAP2$H)
rm(TOPO_BEDMAP2)
source('load_data.r')
TOPO_BEDMAP2$H[reg]
Dep[reg]
rm(Dep)
Dep  = - TOPO_BEDMAP2$zb
Dep[reg]
NA*9
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
YRs
Yrs
is.na(Yrs)
whih.min(Yrs)
which.min(Yrs)
which.min(Yrs, na.rm=TRUE)
which.min(Yrs, na.rm=FALSE)
source('~/TFM/mimhao_smb/calculations.r')
warnings()
is.na(Yrs)
is.na(H)
is.na(c(NA,NA))
is.na(c(NA,NA)[])
Yrs
H
dim(H)
length(H)
source('~/TFM/mimhao_smb/calculations.r')
which.max(c(NA,na)
which.max(c(NA,NA))
which.max(c(NA,NA))
is.na.data.frame(c(NA,NA))
source('~/TFM/mimhao_smb/calculations.r')
wanings()
warnings()
is.na(c(NA,NA,NA))
is.na(c(NA,NA,NA)[1;3])
is.na(c(NA,NA,NA)[1:3])
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
Yrs
Yrs[1]-200
Yrs[i] = inf
source('~/TFM/mimhao_smb/calculations.r')
table7
source('~/TFM/mimhao_smb/calculations.r')
max(Yrs)
max(Yrs, inf.rm=TRUE)
max(Yrs, inf.rm=FALSE)
YRs
Yrs
source('~/TFM/mimhao_smb/calculations.r')
Yrs[1:6]
Yrs[1:6,8:9]
Yrs[1:6;8:9]
Yrs[1:6,7]
Yrs[1:6 7]
Yrs[1:6]
Yrs[1:6] Yrs[8:9]
Yrs[1:6],Yrs[8:9]
Yrs[1:6]
Yrs[1:6,6]
Yrs[1:6,2]
Yrs[1:6:7]
c(Yrs[1:6], Yrs[8:9)]
c(Yrs[1:6], Yrs[8:9])
Yrs[1:6][8:9]
Yrs[22] = max(c(Yrs[1:6][8:20]))
Yrs[22]
c(Yrs[1:6][8:20])
Yrs[1:6]
c(Yrs[1:6],[8:20])
c(Yrs[1:6],Yrs[8:20])
Yrs[22] = max(c(Yrs[1:6],Yrs[8:20]))
Yrs
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
Yrs
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
source('~/TFM/mimhao_smb/calculations.r')
map_Yr
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
map_Yr[kk][which(map_Yr[kk])=="Alredy grounded"] = -1
map_Yr[kk][which(map_Yr[kk])=="Never grounded"] = +Inf
}
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
map_Yr[kk][which(map_Yr[kk]=="Alredy grounded"]) = -1
map_Yr[kk][which(map_Yr[kk]=="Never grounded"]) = +Inf
}
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = +Inf
}
# First run `calculations.r` to load the data and perform calculations
# Load plotting functions
source("functions_plotting.r")
# zlim = range(map_gl, na.rm=TRUE)
# z1 = zlim[1]
# z2 = zlim[2]
# zint = 10
# brks = seq(z1,z2,length.out=zint)
# # col    = c("red","blue")
# # col = rainbow(length(zlim)-1)
# col=colorRampPalette(c("darkmagenta","darkblue","blue","khaki1","red","red4"))(length(brks)-1)
# par(mfrow=c(1,3))
# asp=1.2,pointsize=12
# asp=2.4,pointsize=7
# Map variables by basin
palette1 = c("darkblue","blue4","blue2","khaki1","red","red4")
palette2 = c("darkblue","blue4","blue2","white","orange","red","red4")
palette3 = c("darkblue","blue4","blue2","cyan","white") #to plot precipitation (always negative)
palette4 = c("white", "khaki1","red","red4") #to plot projected dH/dt and oceanic temperature anomalies (always positives)
palette5 = c("red4", "red", "khaki1", "white") #to plot unstable areas
palette6 = c("darkblue","blue2","white","red","red4") #to plot unstable areas
palette7 = c("white", "khaki1", "yellow", "orange", "red4")
brks   = seq(0,15400,by=2) #NUMBER OF YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2071) [Yr]")
graphics.off()
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$Stability.time.yr=Yrs+10
#table7$Stability.year=Yrs+2000
#table7$Stability.year[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
#table7$Stability.year[which(table7$Stability.time.yr==0)]="Alredy grounded"
table7$Stability.time.yr[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
table7$Stability.time.yr[which(table7$Stability.time.yr==0)]="Alredy grounded"
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = +Inf
}
# First run `calculations.r` to load the data and perform calculations
# Load plotting functions
source("functions_plotting.r")
# zlim = range(map_gl, na.rm=TRUE)
# z1 = zlim[1]
# z2 = zlim[2]
# zint = 10
# brks = seq(z1,z2,length.out=zint)
# # col    = c("red","blue")
# # col = rainbow(length(zlim)-1)
# col=colorRampPalette(c("darkmagenta","darkblue","blue","khaki1","red","red4"))(length(brks)-1)
# par(mfrow=c(1,3))
# asp=1.2,pointsize=12
# asp=2.4,pointsize=7
# Map variables by basin
palette1 = c("darkblue","blue4","blue2","khaki1","red","red4")
palette2 = c("darkblue","blue4","blue2","white","orange","red","red4")
palette3 = c("darkblue","blue4","blue2","cyan","white") #to plot precipitation (always negative)
palette4 = c("white", "khaki1","red","red4") #to plot projected dH/dt and oceanic temperature anomalies (always positives)
palette5 = c("red4", "red", "khaki1", "white") #to plot unstable areas
palette6 = c("darkblue","blue2","white","red","red4") #to plot unstable areas
palette7 = c("white", "khaki1", "yellow", "orange", "red4")
brks   = seq(0,15400,by=2) #NUMBER OF YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
col
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = 999999
}
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
brks   = seq(-1,51596,by=2) #NUMBER OF YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = 999999
}
map_Yr
rm(table7)
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$Stability.time.yr=Yrs+10
#table7$Stability.year=Yrs+2000
#table7$Stability.year[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
#table7$Stability.year[which(table7$Stability.time.yr==0)]="Alredy grounded"
# table7$Stability.time.yr[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
# table7$Stability.time.yr[which(table7$Stability.time.yr==0)]="Alredy grounded"
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$Stability.time.yr[q]
}
brks   = seq(0,51596,by=2) #NUMBER OF YEARS
col    = colorRampPalette(palette4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
col    = colorRampPalette("blue",palette4)(length(brks)-1)
col    = colorRampPalette(c("blue",palette4)(length(brks)-1)
)
col    = colorRampPalette(c("blue",palette4))(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
brks   = seq(0,51596,by=2) #NUMBER OF YEARS
col    = colorRampPalette(c("blue",palette4), bias=4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$Stability.time.yr=Yrs-10
table7$Stability.time.yr[which(table7$Stability.time.yr==-10)]=0
#table7$Stability.year=Yrs+2000
#table7$Stability.year[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
#table7$Stability.year[which(table7$Stability.time.yr==0)]="Alredy grounded"
# table7$Stability.time.yr[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
# table7$Stability.time.yr[which(table7$Stability.time.yr==0)]="Alredy grounded"
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"Time interval to ground [yr]"=Yrs-10
table7$"Time interval to ground [yr]"[which(table7$"Time interval to ground [yr]"==-10)]=0
#table7$Stability.year=Yrs+2000
#table7$Stability.year[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
#table7$Stability.year[which(table7$Stability.time.yr==0)]="Alredy grounded"
# table7$Stability.time.yr[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
# table7$Stability.time.yr[which(table7$Stability.time.yr==0)]="Alredy grounded"
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$"Time interval to ground [yr]"[q]
# map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
# map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = 999999
}
brks   = seq(0,51596,by=2) #NUMBER OF YEARS
col    = colorRampPalette(c("blue",palette4), bias=4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"dt to ground [yr]"=Yrs-10
table7$"dt to ground [yr]"[which(table7$"Time interval to ground [yr]"==-10)]=0
#table7$Stability.year=Yrs+2000
#table7$Stability.year[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
#table7$Stability.year[which(table7$Stability.time.yr==0)]="Alredy grounded"
# table7$Stability.time.yr[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
# table7$Stability.time.yr[which(table7$Stability.time.yr==0)]="Alredy grounded"
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$"Time interval to ground [yr]"[q]
# map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
# map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = 999999
}
nms3 = names(def)[c(1)]
table7 = def[nms3]
table7$"dt to ground [yr]"=Yrs-10
table7$"dt to ground [yr]"[which(table7$"dt to ground [yr]"==-10)]=0
#table7$Stability.year=Yrs+2000
#table7$Stability.year[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
#table7$Stability.year[which(table7$Stability.time.yr==0)]="Alredy grounded"
# table7$Stability.time.yr[which(is.infinite(table7$Stability.time.yr))]="Never grounded"
# table7$Stability.time.yr[which(table7$Stability.time.yr==0)]="Alredy grounded"
pdf(file.path(outfldr,"table7.pdf"),height=10, width=10)
grid.table(table7)
dev.off()
map_Yr = mask_super*NA
for (q in 1:n_reg) {
kk = which(mask_super==q)
map_Yr[kk] = table7$"dt to ground [yr]"[q]
# map_Yr[kk][which(map_Yr[kk]=="Alredy grounded")] = -1
# map_Yr[kk][which(map_Yr[kk]=="Never grounded")] = 999999
}
brks   = seq(0,51596,by=2) #NUMBER OF YEARS
col    = colorRampPalette(c("blue",palette4), bias=4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time to achieve stability (Since 2010) [Yr]")
graphics.off()
brks   = seq(0,51596,by=2) #NUMBER OF YEARS
col    = colorRampPalette(c("blue",palette4), bias=4)(length(brks)-1)
myfigure(outfldr,"map_years",type="png",asp=1.2,pointsize=12)
plot_antarctica(Xc,Yc,map_Yr,mask_ice,mask_super,breaks=brks,col=col,title="Time interval to ground (since 2010) [Yr]")
graphics.off()
